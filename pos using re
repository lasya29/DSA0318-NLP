import re

# Define the patterns and their corresponding POS tags
patterns = [
    (r'\b(?:The|the)\b', 'DET'),      # Matches 'The' or 'the' as determiners
    (r'\b(?:cat|dog)\b', 'NOUN'),     # Matches 'cat' or 'dog' as nouns
    (r'\b(?:is|am|are)\b', 'VERB'),   # Matches 'is,' 'am,' or 'are' as verbs
    (r'\b(?:quickly|brightly)\b', 'ADV'), # Matches 'quickly' or 'brightly' as adverbs
    (r'\b(?:[A-Za-z]+)\b', 'NOUN')    # Matches any other words as nouns
]

def pos_tag(text):
    # Split the text into words
    words = text.split()
    tagged_words = []
    
    for word in words:
        # Flag to determine if the word has been tagged
        tagged = False
        
        for pattern, tag in patterns:
            # If the word matches the pattern, tag it
            if re.fullmatch(pattern, word):
                tagged_words.append((word, tag))
                tagged = True
                break
        
        # If no pattern matched, tag as 'UNKNOWN'
        if not tagged:
            tagged_words.append((word, 'UNKNOWN'))
    
    return tagged_words

# Example usage
text = "The cat is quickly running and the dog is brightly jumping"
tagged_text = pos_tag(text)
print(tagged_text)
